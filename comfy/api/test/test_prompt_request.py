# coding: utf-8

"""
    comfyui

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 0.0.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from comfy.api.models.prompt_request import PromptRequest

class TestPromptRequest(unittest.TestCase):
    """PromptRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PromptRequest:
        """Test PromptRequest
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PromptRequest`
        """
        model = PromptRequest()
        if include_optional:
            return PromptRequest(
                client_id = '',
                prompt = {"3":{"inputs":{"seed":732984013877771,"steps":25,"cfg":100,"sampler_name":"euler_ancestral","scheduler":"normal","denoise":1,"model":["10",0],"positive":["6",0],"negative":["7",0],"latent_image":["5",0]},"class_type":"KSampler"},"4":{"inputs":{"ckpt_name":"sd_xl_base_1.0.safetensors"},"class_type":"CheckpointLoaderSimple"},"5":{"inputs":{"width":512,"height":512,"batch_size":1},"class_type":"EmptyLatentImage"},"6":{"inputs":{"text":"$POSITIVE_TEXT","clip":["10",1]},"class_type":"CLIPTextEncode"},"7":{"inputs":{"text":"$NEGATIVE_TEXT","clip":["10",1]},"class_type":"CLIPTextEncode"},"8":{"inputs":{"samples":["3",0],"vae":["4",2]},"class_type":"VAEDecode"},"10":{"inputs":{"lora_name":"pixel-art-xl-v1.1.safetensors","strength_model":1,"strength_clip":1,"model":["4",0],"clip":["4",1]},"class_type":"LoraLoader"},"15":{"inputs":{"images":["26",0]},"class_type":"PreviewImage"},"16":{"inputs":{"images":["8",0]},"class_type":"PreviewImage"},"18":{"inputs":{"upscale_method":"nearest-exact","scale_by":0.125,"image":["8",0]},"class_type":"ImageScaleBy"},"19":{"inputs":{"threshold":250,"mask":["21",0]},"class_type":"BinarizeMask"},"21":{"inputs":{"model":"u2net","image":["18",0]},"class_type":"ImageEstimateForegroundMask"},"25":{"inputs":{"upscale_method":"nearest-exact","scale_by":8,"image":["26",0]},"class_type":"ImageScaleBy"},"26":{"inputs":{"image":["18",0],"mask":["19",0]},"class_type":"ImageCutout"},"27":{"inputs":{"filename_prefix":"Downscale","images":["25",0]},"class_type":"SaveImage"}},
                extra_data = comfy.api.models.extra_data.ExtraData(
                    extra_pnginfo = comfy.api.models.extra_data_extra_pnginfo.ExtraData_extra_pnginfo(
                        workflow = comfy.api.models.workflow.Workflow(
                            last_node_id = 56, 
                            last_link_id = 56, 
                            nodes = [
                                comfy.api.models.workflow_nodes_inner.Workflow_nodes_inner(
                                    id = 56, 
                                    type = '', 
                                    pos = [
                                        1.337
                                        ], 
                                    size = comfy.api.models.workflow_nodes_inner_size.Workflow_nodes_inner_size(
                                        0 = 1.337, 
                                        1 = 1.337, ), 
                                    flags = {
                                        'key' : None
                                        }, 
                                    order = 56, 
                                    mode = 56, 
                                    inputs = [
                                        comfy.api.models.workflow_nodes_inner_inputs_inner.Workflow_nodes_inner_inputs_inner(
                                            name = '', 
                                            type = '', 
                                            link = 56, )
                                        ], 
                                    outputs = [
                                        comfy.api.models.workflow_nodes_inner_outputs_inner.Workflow_nodes_inner_outputs_inner(
                                            name = '', 
                                            type = '', 
                                            links = [
                                                56
                                                ], 
                                            slot_index = 56, )
                                        ], 
                                    properties = comfy.api.models.properties.properties(), 
                                    widgets_values = [
                                        ''
                                        ], )
                                ], 
                            links = [
                                [
                                    null
                                    ]
                                ], 
                            groups = [
                                None
                                ], 
                            config = comfy.api.models.config.config(), 
                            extra = comfy.api.models.extra.extra(), 
                            version = 1.337, ), ), )
            )
        else:
            return PromptRequest(
                prompt = {"3":{"inputs":{"seed":732984013877771,"steps":25,"cfg":100,"sampler_name":"euler_ancestral","scheduler":"normal","denoise":1,"model":["10",0],"positive":["6",0],"negative":["7",0],"latent_image":["5",0]},"class_type":"KSampler"},"4":{"inputs":{"ckpt_name":"sd_xl_base_1.0.safetensors"},"class_type":"CheckpointLoaderSimple"},"5":{"inputs":{"width":512,"height":512,"batch_size":1},"class_type":"EmptyLatentImage"},"6":{"inputs":{"text":"$POSITIVE_TEXT","clip":["10",1]},"class_type":"CLIPTextEncode"},"7":{"inputs":{"text":"$NEGATIVE_TEXT","clip":["10",1]},"class_type":"CLIPTextEncode"},"8":{"inputs":{"samples":["3",0],"vae":["4",2]},"class_type":"VAEDecode"},"10":{"inputs":{"lora_name":"pixel-art-xl-v1.1.safetensors","strength_model":1,"strength_clip":1,"model":["4",0],"clip":["4",1]},"class_type":"LoraLoader"},"15":{"inputs":{"images":["26",0]},"class_type":"PreviewImage"},"16":{"inputs":{"images":["8",0]},"class_type":"PreviewImage"},"18":{"inputs":{"upscale_method":"nearest-exact","scale_by":0.125,"image":["8",0]},"class_type":"ImageScaleBy"},"19":{"inputs":{"threshold":250,"mask":["21",0]},"class_type":"BinarizeMask"},"21":{"inputs":{"model":"u2net","image":["18",0]},"class_type":"ImageEstimateForegroundMask"},"25":{"inputs":{"upscale_method":"nearest-exact","scale_by":8,"image":["26",0]},"class_type":"ImageScaleBy"},"26":{"inputs":{"image":["18",0],"mask":["19",0]},"class_type":"ImageCutout"},"27":{"inputs":{"filename_prefix":"Downscale","images":["25",0]},"class_type":"SaveImage"}},
        )
        """

    def testPromptRequest(self):
        """Test PromptRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
